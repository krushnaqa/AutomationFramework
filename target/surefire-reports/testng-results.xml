<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-01T01:19:24 IST" name="Suite" finished-at="2024-12-01T01:19:47 IST" duration-ms="22715">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRerunner@b9b00e0]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@428640fa]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-12-01T01:19:24 IST" name="Test" finished-at="2024-12-01T01:19:47 IST" duration-ms="22715">
      <class name="Runner.CucumberRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.CucumberRunner@428640fa]" started-at="2024-12-01T01:19:24 IST" name="setUpClass" finished-at="2024-12-01T01:19:25 IST" duration-ms="541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@428640fa]" started-at="2024-12-01T01:19:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-12-01T01:19:37 IST" duration-ms="12151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check and verify url is redirected to Practise page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[test]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRunner@428640fa]" started-at="2024-12-01T01:19:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-12-01T01:19:33 IST" duration-ms="8652" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["check and verify url is redirected to another page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[test]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at stepDefinitions.StepDefinition.verify_user_is_on_another_page(StepDefinition.java:46)
at ✽.verify user is on another page(file:///D:/Software_Testing/Automation_Projects/WorkSpace1/AutomationFramework/src/main/java/Features/PracticePage.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.CucumberRunner@428640fa]" started-at="2024-12-01T01:19:37 IST" name="tearDownClass" finished-at="2024-12-01T01:19:37 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.CucumberRunner -->
      <class name="Runner.CucumberRerunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.CucumberRerunner@b9b00e0]" started-at="2024-12-01T01:19:37 IST" name="setUpClass" finished-at="2024-12-01T01:19:37 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.CucumberRerunner@b9b00e0]" started-at="2024-12-01T01:19:37 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-12-01T01:19:47 IST" duration-ms="9792" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["check and verify url is redirected to another page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[test]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at stepDefinitions.StepDefinition.verify_user_is_on_another_page(StepDefinition.java:46)
at ✽.verify user is on another page(file:///D:/Software_Testing/Automation_Projects/WorkSpace1/AutomationFramework/src/main/java/Features/PracticePage.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.CucumberRerunner@b9b00e0]" started-at="2024-12-01T01:19:47 IST" name="tearDownClass" finished-at="2024-12-01T01:19:47 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.CucumberRerunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
